name: CI/CD avec SonarQube
'on':
  push:
    branches:
      - master
jobs:
  build-code-gradle:
    runs-on: ubuntu-latest
    env:
      DB_USERNAME: '${{ secrets.DB_USERNAME }}'
      DB_PASSWORD: '${{ secrets.DB_PASSWORD }}'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
      - name: Donner les droits d'exécution à Gradle
        run: chmod +x gradlew
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Display Gradle version
        run: ./gradlew --version
      - name: Build with Gradle
        run: ./gradlew clean assemble
      - name: Tests Jacoco
        run: ./gradlew test jacocoTestReport
      - name: Check if reports are present
        run: ls -lRth ${{ github.workspace }}/build/reports/
      - name: check report
        run: more ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.csv
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
      - name: Check if the app is build and present
        run: |
          ls ${{ github.workspace }}/build/libs
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build
  sonarqube-analysis:
    runs-on: ubuntu-latest
    needs: build-code-gradle
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build
      - name: Check classes directory
        run: |
          ls -lRth ${{ github.workspace }}/build/classes/*
      - name: Analyse SonarQube
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        with:
          args: >
            -Dsonar.organization=audirline
            -Dsonar.projectKey=audirline_spring-music-sqldb
            -Dsonar.java.binaries=build/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
        env:
          SONAR_TOKEN: '${{ secrets.SONAR_TOKEN }}'
