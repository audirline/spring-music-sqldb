name: CI/CD avec SonarQube
'on':
  push:
    branches:
      - master
jobs:
  build-code-gradle:
    runs-on: ubuntu-latest
    env:
      DB_USERNAME: '${{ secrets.DB_USERNAME }}'
      DB_PASSWORD: '${{ secrets.DB_PASSWORD }}'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
      - name: Donner les droits d'exécution à Gradle
        run: chmod +x gradlew
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        run: ./gradlew clean assemble
      - name: Tests Jacoco
        run: ./gradlew test jacocoTestReport
      - name: Check if reports are present
        run: ls -lRth ${{ github.workspace }}/build/reports/
      - name: Check generated report
        run: more ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.csv
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          generate-coverage-badge: true
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: build/reports/jacoco/test/html/badges
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        env: 
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
      - name: Check owasp report location
        run: ls -lRth ${{github.workspace}}/reports
      - name: Déplacer le rapport OWASP dans le dossier à publier
        run: mkdir -p build/reports/owasp && cp reports/dependency-check-report.html build/reports/owasp/
      - name: Publier rapport OWASP sur GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/reports/owasp
      - name: Check if the app is build and present
        run: |
          ls ${{ github.workspace }}/build/libs
      - name: Check the badges
        run: ls -lRth build/reports/jacoco/test/html/badges
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build
      - name: Publish coverage report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/reports/jacoco/test/html
  sonarqube-analysis:
    runs-on: ubuntu-latest
    needs: build-code-gradle
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build
      - name: Check classes directory
        run: |
          ls -lRth ${{ github.workspace }}/build/classes/*
      - name: Analyse SonarQube
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        with:
          args: >
            -Dsonar.organization=audirline
            -Dsonar.projectKey=audirline_spring-music-sqldb
            -Dsonar.java.binaries=build/classes
            -Dsonar.sonar.java.libraries=build/libs
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
        env:
          SONAR_TOKEN: '${{ secrets.SONAR_TOKEN }}'
